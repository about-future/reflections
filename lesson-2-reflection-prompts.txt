What happens when you initialize a repository? Why do you need to do it?

	A message is displayed confirming the initialisation of an empty Git repository.
	The initialisation is needed so files from a folder will be tracked and commits can be done.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area works lika a buffer area or a shopping cart, where you put information
	or remove information before you finish your work. After your work is done, the information
	from the staging area is passed to working directory. 

How can you use the staging area to make sure you have one commit per logical
change?

	Checking the status of a commit, before we finish it, will help us make sure we have a commit per change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	It makes a big difference and offers me the possibility of heaving multiple variations of the same app
	with a clear structure of "what is what".

How do the diagrams help you visualize the branch structure?

	Working with diagrams helps me alot. It's much easier for me to understand and visualize the structure of a project.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	A new commit results from a merging of two branches. We represent it like that so we know which are
	the parrents of the resulted commit and how to retrace our steps in case we need to.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	It great when you can merge automaticly two branches and it's a fast process.
	It's not so great when we get a conflict while try to merge and have to do it manually,
	but it's a lot safer if we have major changes in both branches.

	In conclusion, automatic merging is fast, manually is safe.
